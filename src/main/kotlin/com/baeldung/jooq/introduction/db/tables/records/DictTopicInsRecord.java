/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.DictTopicIns;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictTopicInsRecord extends TableRecordImpl<DictTopicInsRecord> implements Record2<Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.DICT_TOPIC_INS.GRAPH_ID</code>.
     */
    public DictTopicInsRecord setGraphId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_TOPIC_INS.GRAPH_ID</code>.
     */
    public Object getGraphId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_TOPIC_INS.NODE_ID</code>.
     */
    public DictTopicInsRecord setNodeId(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_TOPIC_INS.NODE_ID</code>.
     */
    public Object getNodeId() {
        return get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Object, Object> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Object, Object> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return DictTopicIns.DICT_TOPIC_INS.GRAPH_ID;
    }

    @Override
    public Field<Object> field2() {
        return DictTopicIns.DICT_TOPIC_INS.NODE_ID;
    }

    @Override
    public Object component1() {
        return getGraphId();
    }

    @Override
    public Object component2() {
        return getNodeId();
    }

    @Override
    public Object value1() {
        return getGraphId();
    }

    @Override
    public Object value2() {
        return getNodeId();
    }

    @Override
    public DictTopicInsRecord value1(Object value) {
        setGraphId(value);
        return this;
    }

    @Override
    public DictTopicInsRecord value2(Object value) {
        setNodeId(value);
        return this;
    }

    @Override
    public DictTopicInsRecord values(Object value1, Object value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DictTopicInsRecord
     */
    public DictTopicInsRecord() {
        super(DictTopicIns.DICT_TOPIC_INS);
    }

    /**
     * Create a detached, initialised DictTopicInsRecord
     */
    public DictTopicInsRecord(Object graphId, Object nodeId) {
        super(DictTopicIns.DICT_TOPIC_INS);

        setGraphId(graphId);
        setNodeId(nodeId);
    }
}
