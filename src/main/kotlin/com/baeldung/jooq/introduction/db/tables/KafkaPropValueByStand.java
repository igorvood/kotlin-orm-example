/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables;


import com.baeldung.jooq.introduction.db.Localdev;
import com.baeldung.jooq.introduction.db.tables.records.KafkaPropValueByStandRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KafkaPropValueByStand extends TableImpl<KafkaPropValueByStandRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND</code>
     */
    public static final KafkaPropValueByStand KAFKA_PROP_VALUE_BY_STAND = new KafkaPropValueByStand();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KafkaPropValueByStandRecord> getRecordType() {
        return KafkaPropValueByStandRecord.class;
    }

    /**
     * The column <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND.GRP_ID</code>.
     */
    public final TableField<KafkaPropValueByStandRecord, Object> GRP_ID = createField(DSL.name("GRP_ID"), SQLDataType.OTHER, this, "");

    /**
     * The column <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND.TYPE_PROP</code>.
     */
    public final TableField<KafkaPropValueByStandRecord, Object> TYPE_PROP = createField(DSL.name("TYPE_PROP"), SQLDataType.OTHER, this, "");

    /**
     * The column <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND.PROP_ID</code>.
     */
    public final TableField<KafkaPropValueByStandRecord, Object> PROP_ID = createField(DSL.name("PROP_ID"), SQLDataType.OTHER, this, "");

    /**
     * The column <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND.STAND</code>.
     */
    public final TableField<KafkaPropValueByStandRecord, Object> STAND = createField(DSL.name("STAND"), SQLDataType.OTHER, this, "");

    /**
     * The column <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND.PROPERTY_VAL</code>.
     */
    public final TableField<KafkaPropValueByStandRecord, Object> PROPERTY_VAL = createField(DSL.name("PROPERTY_VAL"), SQLDataType.OTHER, this, "");

    private KafkaPropValueByStand(Name alias, Table<KafkaPropValueByStandRecord> aliased) {
        this(alias, aliased, null);
    }

    private KafkaPropValueByStand(Name alias, Table<KafkaPropValueByStandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    /**
     * Create an aliased <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND</code> table reference
     */
    public KafkaPropValueByStand(String alias) {
        this(DSL.name(alias), KAFKA_PROP_VALUE_BY_STAND);
    }

    /**
     * Create an aliased <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND</code> table reference
     */
    public KafkaPropValueByStand(Name alias) {
        this(alias, KAFKA_PROP_VALUE_BY_STAND);
    }

    /**
     * Create a <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND</code> table reference
     */
    public KafkaPropValueByStand() {
        this(DSL.name("KAFKA_PROP_VALUE_BY_STAND"), null);
    }

    public <O extends Record> KafkaPropValueByStand(Table<O> child, ForeignKey<O, KafkaPropValueByStandRecord> key) {
        super(child, key, KAFKA_PROP_VALUE_BY_STAND);
    }

    @Override
    public Schema getSchema() {
        return Localdev.LOCALDEV;
    }

    @Override
    public KafkaPropValueByStand as(String alias) {
        return new KafkaPropValueByStand(DSL.name(alias), this);
    }

    @Override
    public KafkaPropValueByStand as(Name alias) {
        return new KafkaPropValueByStand(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public KafkaPropValueByStand rename(String name) {
        return new KafkaPropValueByStand(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public KafkaPropValueByStand rename(Name name) {
        return new KafkaPropValueByStand(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Object, Object, Object, Object, Object> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
