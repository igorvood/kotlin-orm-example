/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db;


import com.baeldung.jooq.introduction.db.tables.AllPlaceholder;
import com.baeldung.jooq.introduction.db.tables.CkEnvPropUnique;
import com.baeldung.jooq.introduction.db.tables.Databasechangelog;
import com.baeldung.jooq.introduction.db.tables.Databasechangeloglock;
import com.baeldung.jooq.introduction.db.tables.DictAbstractGraphNode;
import com.baeldung.jooq.introduction.db.tables.DictArrow;
import com.baeldung.jooq.introduction.db.tables.DictFlinkPropValue;
import com.baeldung.jooq.introduction.db.tables.DictKafkaProp;
import com.baeldung.jooq.introduction.db.tables.DictKafkaPropValue;
import com.baeldung.jooq.introduction.db.tables.DictKafkaPropValueByStand;
import com.baeldung.jooq.introduction.db.tables.DictKafkaPropertyGrp;
import com.baeldung.jooq.introduction.db.tables.DictPlaceHolder;
import com.baeldung.jooq.introduction.db.tables.DictPlaceHolderByService;
import com.baeldung.jooq.introduction.db.tables.DictService;
import com.baeldung.jooq.introduction.db.tables.DictServiceIns;
import com.baeldung.jooq.introduction.db.tables.DictServiceNode;
import com.baeldung.jooq.introduction.db.tables.DictServiceProfile;
import com.baeldung.jooq.introduction.db.tables.DictTopicIns;
import com.baeldung.jooq.introduction.db.tables.DictTopicNode;
import com.baeldung.jooq.introduction.db.tables.DictTopicParamsByStand;
import com.baeldung.jooq.introduction.db.tables.FlinkPropertyByStand;
import com.baeldung.jooq.introduction.db.tables.FullFlinkServicePropertyStand;
import com.baeldung.jooq.introduction.db.tables.KafkaPropValueByStand;
import com.baeldung.jooq.introduction.db.tables.KafkaPropertyBySevice;
import com.baeldung.jooq.introduction.db.tables.KafkaTopicByService;
import com.baeldung.jooq.introduction.db.tables.MetaPropertyFunction;
import com.baeldung.jooq.introduction.db.tables.MetaStand;
import com.baeldung.jooq.introduction.db.tables.RepTopicNameByStand;
import com.baeldung.jooq.introduction.db.tables.RepTopicUse;
import com.baeldung.jooq.introduction.db.tables.ResolvablePlaceholder;
import com.baeldung.jooq.introduction.db.tables.ServiceTopicNameByStand;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Localdev extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>LOCALDEV</code>
     */
    public static final Localdev LOCALDEV = new Localdev();

    /**
     * The table <code>LOCALDEV.ALL_PLACEHOLDER</code>.
     */
    public final AllPlaceholder ALL_PLACEHOLDER = AllPlaceholder.ALL_PLACEHOLDER;

    /**
     * The table <code>LOCALDEV.CK_ENV_PROP_UNIQUE</code>.
     */
    public final CkEnvPropUnique CK_ENV_PROP_UNIQUE = CkEnvPropUnique.CK_ENV_PROP_UNIQUE;

    /**
     * The table <code>LOCALDEV.DATABASECHANGELOG</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>LOCALDEV.DATABASECHANGELOGLOCK</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>LOCALDEV.DICT_ABSTRACT_GRAPH_NODE</code>.
     */
    public final DictAbstractGraphNode DICT_ABSTRACT_GRAPH_NODE = DictAbstractGraphNode.DICT_ABSTRACT_GRAPH_NODE;

    /**
     * The table <code>LOCALDEV.DICT_ARROW</code>.
     */
    public final DictArrow DICT_ARROW = DictArrow.DICT_ARROW;

    /**
     * The table <code>LOCALDEV.DICT_FLINK_PROP_VALUE</code>.
     */
    public final DictFlinkPropValue DICT_FLINK_PROP_VALUE = DictFlinkPropValue.DICT_FLINK_PROP_VALUE;

    /**
     * The table <code>LOCALDEV.DICT_KAFKA_PROP</code>.
     */
    public final DictKafkaProp DICT_KAFKA_PROP = DictKafkaProp.DICT_KAFKA_PROP;

    /**
     * The table <code>LOCALDEV.DICT_KAFKA_PROP_VALUE</code>.
     */
    public final DictKafkaPropValue DICT_KAFKA_PROP_VALUE = DictKafkaPropValue.DICT_KAFKA_PROP_VALUE;

    /**
     * The table <code>LOCALDEV.DICT_KAFKA_PROP_VALUE_BY_STAND</code>.
     */
    public final DictKafkaPropValueByStand DICT_KAFKA_PROP_VALUE_BY_STAND = DictKafkaPropValueByStand.DICT_KAFKA_PROP_VALUE_BY_STAND;

    /**
     * The table <code>LOCALDEV.DICT_KAFKA_PROPERTY_GRP</code>.
     */
    public final DictKafkaPropertyGrp DICT_KAFKA_PROPERTY_GRP = DictKafkaPropertyGrp.DICT_KAFKA_PROPERTY_GRP;

    /**
     * The table <code>LOCALDEV.DICT_PLACE_HOLDER</code>.
     */
    public final DictPlaceHolder DICT_PLACE_HOLDER = DictPlaceHolder.DICT_PLACE_HOLDER;

    /**
     * The table <code>LOCALDEV.DICT_PLACE_HOLDER_BY_SERVICE</code>.
     */
    public final DictPlaceHolderByService DICT_PLACE_HOLDER_BY_SERVICE = DictPlaceHolderByService.DICT_PLACE_HOLDER_BY_SERVICE;

    /**
     * The table <code>LOCALDEV.DICT_SERVICE</code>.
     */
    public final DictService DICT_SERVICE = DictService.DICT_SERVICE;

    /**
     * The table <code>LOCALDEV.DICT_SERVICE_INS</code>.
     */
    public final DictServiceIns DICT_SERVICE_INS = DictServiceIns.DICT_SERVICE_INS;

    /**
     * The table <code>LOCALDEV.DICT_SERVICE_NODE</code>.
     */
    public final DictServiceNode DICT_SERVICE_NODE = DictServiceNode.DICT_SERVICE_NODE;

    /**
     * The table <code>LOCALDEV.DICT_SERVICE_PROFILE</code>.
     */
    public final DictServiceProfile DICT_SERVICE_PROFILE = DictServiceProfile.DICT_SERVICE_PROFILE;

    /**
     * The table <code>LOCALDEV.DICT_TOPIC_INS</code>.
     */
    public final DictTopicIns DICT_TOPIC_INS = DictTopicIns.DICT_TOPIC_INS;

    /**
     * The table <code>LOCALDEV.DICT_TOPIC_NODE</code>.
     */
    public final DictTopicNode DICT_TOPIC_NODE = DictTopicNode.DICT_TOPIC_NODE;

    /**
     * The table <code>LOCALDEV.DICT_TOPIC_PARAMS_BY_STAND</code>.
     */
    public final DictTopicParamsByStand DICT_TOPIC_PARAMS_BY_STAND = DictTopicParamsByStand.DICT_TOPIC_PARAMS_BY_STAND;

    /**
     * The table <code>LOCALDEV.FLINK_PROPERTY_BY_STAND</code>.
     */
    public final FlinkPropertyByStand FLINK_PROPERTY_BY_STAND = FlinkPropertyByStand.FLINK_PROPERTY_BY_STAND;

    /**
     * The table <code>LOCALDEV.FULL_FLINK_SERVICE_PROPERTY_STAND</code>.
     */
    public final FullFlinkServicePropertyStand FULL_FLINK_SERVICE_PROPERTY_STAND = FullFlinkServicePropertyStand.FULL_FLINK_SERVICE_PROPERTY_STAND;

    /**
     * The table <code>LOCALDEV.KAFKA_PROP_VALUE_BY_STAND</code>.
     */
    public final KafkaPropValueByStand KAFKA_PROP_VALUE_BY_STAND = KafkaPropValueByStand.KAFKA_PROP_VALUE_BY_STAND;

    /**
     * The table <code>LOCALDEV.KAFKA_PROPERTY_BY_SEVICE</code>.
     */
    public final KafkaPropertyBySevice KAFKA_PROPERTY_BY_SEVICE = KafkaPropertyBySevice.KAFKA_PROPERTY_BY_SEVICE;

    /**
     * The table <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE</code>.
     */
    public final KafkaTopicByService KAFKA_TOPIC_BY_SERVICE = KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE;

    /**
     * The table <code>LOCALDEV.META_PROPERTY_FUNCTION</code>.
     */
    public final MetaPropertyFunction META_PROPERTY_FUNCTION = MetaPropertyFunction.META_PROPERTY_FUNCTION;

    /**
     * The table <code>LOCALDEV.META_STAND</code>.
     */
    public final MetaStand META_STAND = MetaStand.META_STAND;

    /**
     * The table <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND</code>.
     */
    public final RepTopicNameByStand REP_TOPIC_NAME_BY_STAND = RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND;

    /**
     * The table <code>LOCALDEV.REP_TOPIC_USE</code>.
     */
    public final RepTopicUse REP_TOPIC_USE = RepTopicUse.REP_TOPIC_USE;

    /**
     * The table <code>LOCALDEV.RESOLVABLE_PLACEHOLDER</code>.
     */
    public final ResolvablePlaceholder RESOLVABLE_PLACEHOLDER = ResolvablePlaceholder.RESOLVABLE_PLACEHOLDER;

    /**
     * The table <code>LOCALDEV.SERVICE_TOPIC_NAME_BY_STAND</code>.
     */
    public final ServiceTopicNameByStand SERVICE_TOPIC_NAME_BY_STAND = ServiceTopicNameByStand.SERVICE_TOPIC_NAME_BY_STAND;

    /**
     * No further instances allowed
     */
    private Localdev() {
        super("LOCALDEV", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            AllPlaceholder.ALL_PLACEHOLDER,
            CkEnvPropUnique.CK_ENV_PROP_UNIQUE,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            DictAbstractGraphNode.DICT_ABSTRACT_GRAPH_NODE,
            DictArrow.DICT_ARROW,
            DictFlinkPropValue.DICT_FLINK_PROP_VALUE,
            DictKafkaProp.DICT_KAFKA_PROP,
            DictKafkaPropValue.DICT_KAFKA_PROP_VALUE,
            DictKafkaPropValueByStand.DICT_KAFKA_PROP_VALUE_BY_STAND,
            DictKafkaPropertyGrp.DICT_KAFKA_PROPERTY_GRP,
            DictPlaceHolder.DICT_PLACE_HOLDER,
            DictPlaceHolderByService.DICT_PLACE_HOLDER_BY_SERVICE,
            DictService.DICT_SERVICE,
            DictServiceIns.DICT_SERVICE_INS,
            DictServiceNode.DICT_SERVICE_NODE,
            DictServiceProfile.DICT_SERVICE_PROFILE,
            DictTopicIns.DICT_TOPIC_INS,
            DictTopicNode.DICT_TOPIC_NODE,
            DictTopicParamsByStand.DICT_TOPIC_PARAMS_BY_STAND,
            FlinkPropertyByStand.FLINK_PROPERTY_BY_STAND,
            FullFlinkServicePropertyStand.FULL_FLINK_SERVICE_PROPERTY_STAND,
            KafkaPropValueByStand.KAFKA_PROP_VALUE_BY_STAND,
            KafkaPropertyBySevice.KAFKA_PROPERTY_BY_SEVICE,
            KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE,
            MetaPropertyFunction.META_PROPERTY_FUNCTION,
            MetaStand.META_STAND,
            RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND,
            RepTopicUse.REP_TOPIC_USE,
            ResolvablePlaceholder.RESOLVABLE_PLACEHOLDER,
            ServiceTopicNameByStand.SERVICE_TOPIC_NAME_BY_STAND);
    }
}
