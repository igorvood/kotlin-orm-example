/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.Databasechangelog;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabasechangelogRecord extends TableRecordImpl<DatabasechangelogRecord> implements Record14<Object, Object, Object, LocalDateTime, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.ID</code>.
     */
    public DatabasechangelogRecord setId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.ID</code>.
     */
    public Object getId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.AUTHOR</code>.
     */
    public DatabasechangelogRecord setAuthor(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.AUTHOR</code>.
     */
    public Object getAuthor() {
        return get(1);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.FILENAME</code>.
     */
    public DatabasechangelogRecord setFilename(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.FILENAME</code>.
     */
    public Object getFilename() {
        return get(2);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.DATEEXECUTED</code>.
     */
    public DatabasechangelogRecord setDateexecuted(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.DATEEXECUTED</code>.
     */
    public LocalDateTime getDateexecuted() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.ORDEREXECUTED</code>.
     */
    public DatabasechangelogRecord setOrderexecuted(Object value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.ORDEREXECUTED</code>.
     */
    public Object getOrderexecuted() {
        return get(4);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.EXECTYPE</code>.
     */
    public DatabasechangelogRecord setExectype(Object value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.EXECTYPE</code>.
     */
    public Object getExectype() {
        return get(5);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.MD5SUM</code>.
     */
    public DatabasechangelogRecord setMd5sum(Object value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.MD5SUM</code>.
     */
    public Object getMd5sum() {
        return get(6);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.DESCRIPTION</code>.
     */
    public DatabasechangelogRecord setDescription(Object value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.DESCRIPTION</code>.
     */
    public Object getDescription() {
        return get(7);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.COMMENTS</code>.
     */
    public DatabasechangelogRecord setComments(Object value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.COMMENTS</code>.
     */
    public Object getComments() {
        return get(8);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.TAG</code>.
     */
    public DatabasechangelogRecord setTag(Object value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.TAG</code>.
     */
    public Object getTag() {
        return get(9);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.LIQUIBASE</code>.
     */
    public DatabasechangelogRecord setLiquibase(Object value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.LIQUIBASE</code>.
     */
    public Object getLiquibase() {
        return get(10);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.CONTEXTS</code>.
     */
    public DatabasechangelogRecord setContexts(Object value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.CONTEXTS</code>.
     */
    public Object getContexts() {
        return get(11);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.LABELS</code>.
     */
    public DatabasechangelogRecord setLabels(Object value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.LABELS</code>.
     */
    public Object getLabels() {
        return get(12);
    }

    /**
     * Setter for <code>LOCALDEV.DATABASECHANGELOG.DEPLOYMENT_ID</code>.
     */
    public DatabasechangelogRecord setDeploymentId(Object value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DATABASECHANGELOG.DEPLOYMENT_ID</code>.
     */
    public Object getDeploymentId() {
        return get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Object, Object, Object, LocalDateTime, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Object, Object, Object, LocalDateTime, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return Databasechangelog.DATABASECHANGELOG.ID;
    }

    @Override
    public Field<Object> field2() {
        return Databasechangelog.DATABASECHANGELOG.AUTHOR;
    }

    @Override
    public Field<Object> field3() {
        return Databasechangelog.DATABASECHANGELOG.FILENAME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Databasechangelog.DATABASECHANGELOG.DATEEXECUTED;
    }

    @Override
    public Field<Object> field5() {
        return Databasechangelog.DATABASECHANGELOG.ORDEREXECUTED;
    }

    @Override
    public Field<Object> field6() {
        return Databasechangelog.DATABASECHANGELOG.EXECTYPE;
    }

    @Override
    public Field<Object> field7() {
        return Databasechangelog.DATABASECHANGELOG.MD5SUM;
    }

    @Override
    public Field<Object> field8() {
        return Databasechangelog.DATABASECHANGELOG.DESCRIPTION;
    }

    @Override
    public Field<Object> field9() {
        return Databasechangelog.DATABASECHANGELOG.COMMENTS;
    }

    @Override
    public Field<Object> field10() {
        return Databasechangelog.DATABASECHANGELOG.TAG;
    }

    @Override
    public Field<Object> field11() {
        return Databasechangelog.DATABASECHANGELOG.LIQUIBASE;
    }

    @Override
    public Field<Object> field12() {
        return Databasechangelog.DATABASECHANGELOG.CONTEXTS;
    }

    @Override
    public Field<Object> field13() {
        return Databasechangelog.DATABASECHANGELOG.LABELS;
    }

    @Override
    public Field<Object> field14() {
        return Databasechangelog.DATABASECHANGELOG.DEPLOYMENT_ID;
    }

    @Override
    public Object component1() {
        return getId();
    }

    @Override
    public Object component2() {
        return getAuthor();
    }

    @Override
    public Object component3() {
        return getFilename();
    }

    @Override
    public LocalDateTime component4() {
        return getDateexecuted();
    }

    @Override
    public Object component5() {
        return getOrderexecuted();
    }

    @Override
    public Object component6() {
        return getExectype();
    }

    @Override
    public Object component7() {
        return getMd5sum();
    }

    @Override
    public Object component8() {
        return getDescription();
    }

    @Override
    public Object component9() {
        return getComments();
    }

    @Override
    public Object component10() {
        return getTag();
    }

    @Override
    public Object component11() {
        return getLiquibase();
    }

    @Override
    public Object component12() {
        return getContexts();
    }

    @Override
    public Object component13() {
        return getLabels();
    }

    @Override
    public Object component14() {
        return getDeploymentId();
    }

    @Override
    public Object value1() {
        return getId();
    }

    @Override
    public Object value2() {
        return getAuthor();
    }

    @Override
    public Object value3() {
        return getFilename();
    }

    @Override
    public LocalDateTime value4() {
        return getDateexecuted();
    }

    @Override
    public Object value5() {
        return getOrderexecuted();
    }

    @Override
    public Object value6() {
        return getExectype();
    }

    @Override
    public Object value7() {
        return getMd5sum();
    }

    @Override
    public Object value8() {
        return getDescription();
    }

    @Override
    public Object value9() {
        return getComments();
    }

    @Override
    public Object value10() {
        return getTag();
    }

    @Override
    public Object value11() {
        return getLiquibase();
    }

    @Override
    public Object value12() {
        return getContexts();
    }

    @Override
    public Object value13() {
        return getLabels();
    }

    @Override
    public Object value14() {
        return getDeploymentId();
    }

    @Override
    public DatabasechangelogRecord value1(Object value) {
        setId(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value2(Object value) {
        setAuthor(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value3(Object value) {
        setFilename(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value4(LocalDateTime value) {
        setDateexecuted(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value5(Object value) {
        setOrderexecuted(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value6(Object value) {
        setExectype(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value7(Object value) {
        setMd5sum(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value8(Object value) {
        setDescription(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value9(Object value) {
        setComments(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value10(Object value) {
        setTag(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value11(Object value) {
        setLiquibase(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value12(Object value) {
        setContexts(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value13(Object value) {
        setLabels(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord value14(Object value) {
        setDeploymentId(value);
        return this;
    }

    @Override
    public DatabasechangelogRecord values(Object value1, Object value2, Object value3, LocalDateTime value4, Object value5, Object value6, Object value7, Object value8, Object value9, Object value10, Object value11, Object value12, Object value13, Object value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatabasechangelogRecord
     */
    public DatabasechangelogRecord() {
        super(Databasechangelog.DATABASECHANGELOG);
    }

    /**
     * Create a detached, initialised DatabasechangelogRecord
     */
    public DatabasechangelogRecord(Object id, Object author, Object filename, LocalDateTime dateexecuted, Object orderexecuted, Object exectype, Object md5sum, Object description, Object comments, Object tag, Object liquibase, Object contexts, Object labels, Object deploymentId) {
        super(Databasechangelog.DATABASECHANGELOG);

        setId(id);
        setAuthor(author);
        setFilename(filename);
        setDateexecuted(dateexecuted);
        setOrderexecuted(orderexecuted);
        setExectype(exectype);
        setMd5sum(md5sum);
        setDescription(description);
        setComments(comments);
        setTag(tag);
        setLiquibase(liquibase);
        setContexts(contexts);
        setLabels(labels);
        setDeploymentId(deploymentId);
    }
}
