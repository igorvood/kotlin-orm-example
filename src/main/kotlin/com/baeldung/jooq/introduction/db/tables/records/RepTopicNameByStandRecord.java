/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.RepTopicNameByStand;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepTopicNameByStandRecord extends TableRecordImpl<RepTopicNameByStandRecord> implements Record4<Object, Object, Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.TOPIC_ID</code>.
     */
    public RepTopicNameByStandRecord setTopicId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.TOPIC_ID</code>.
     */
    public Object getTopicId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.TOPIC_NAME</code>.
     */
    public RepTopicNameByStandRecord setTopicName(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.TOPIC_NAME</code>.
     */
    public Object getTopicName() {
        return get(1);
    }

    /**
     * Setter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.STAND</code>.
     */
    public RepTopicNameByStandRecord setStand(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.STAND</code>.
     */
    public Object getStand() {
        return get(2);
    }

    /**
     * Setter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.USED</code>.
     */
    public RepTopicNameByStandRecord setUsed(Object value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.REP_TOPIC_NAME_BY_STAND.USED</code>.
     */
    public Object getUsed() {
        return get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Object, Object, Object, Object> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Object, Object, Object, Object> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND.TOPIC_ID;
    }

    @Override
    public Field<Object> field2() {
        return RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND.TOPIC_NAME;
    }

    @Override
    public Field<Object> field3() {
        return RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND.STAND;
    }

    @Override
    public Field<Object> field4() {
        return RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND.USED;
    }

    @Override
    public Object component1() {
        return getTopicId();
    }

    @Override
    public Object component2() {
        return getTopicName();
    }

    @Override
    public Object component3() {
        return getStand();
    }

    @Override
    public Object component4() {
        return getUsed();
    }

    @Override
    public Object value1() {
        return getTopicId();
    }

    @Override
    public Object value2() {
        return getTopicName();
    }

    @Override
    public Object value3() {
        return getStand();
    }

    @Override
    public Object value4() {
        return getUsed();
    }

    @Override
    public RepTopicNameByStandRecord value1(Object value) {
        setTopicId(value);
        return this;
    }

    @Override
    public RepTopicNameByStandRecord value2(Object value) {
        setTopicName(value);
        return this;
    }

    @Override
    public RepTopicNameByStandRecord value3(Object value) {
        setStand(value);
        return this;
    }

    @Override
    public RepTopicNameByStandRecord value4(Object value) {
        setUsed(value);
        return this;
    }

    @Override
    public RepTopicNameByStandRecord values(Object value1, Object value2, Object value3, Object value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RepTopicNameByStandRecord
     */
    public RepTopicNameByStandRecord() {
        super(RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND);
    }

    /**
     * Create a detached, initialised RepTopicNameByStandRecord
     */
    public RepTopicNameByStandRecord(Object topicId, Object topicName, Object stand, Object used) {
        super(RepTopicNameByStand.REP_TOPIC_NAME_BY_STAND);

        setTopicId(topicId);
        setTopicName(topicName);
        setStand(stand);
        setUsed(used);
    }
}
