/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.KafkaTopicByService;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KafkaTopicByServiceRecord extends TableRecordImpl<KafkaTopicByServiceRecord> implements Record8<Object, Object, Object, Object, String, Object, Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.SERVICE_ID</code>.
     */
    public KafkaTopicByServiceRecord setServiceId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.SERVICE_ID</code>.
     */
    public Object getServiceId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.PROFILE_ID</code>.
     */
    public KafkaTopicByServiceRecord setProfileId(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.PROFILE_ID</code>.
     */
    public Object getProfileId() {
        return get(1);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.TOPIC_ID</code>.
     */
    public KafkaTopicByServiceRecord setTopicId(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.TOPIC_ID</code>.
     */
    public Object getTopicId() {
        return get(2);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.STAND</code>.
     */
    public KafkaTopicByServiceRecord setStand(Object value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.STAND</code>.
     */
    public Object getStand() {
        return get(3);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.DERRECTION</code>.
     */
    public KafkaTopicByServiceRecord setDerrection(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.DERRECTION</code>.
     */
    public String getDerrection() {
        return (String) get(4);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.TOPIC_NAME</code>.
     */
    public KafkaTopicByServiceRecord setTopicName(Object value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.TOPIC_NAME</code>.
     */
    public Object getTopicName() {
        return get(5);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.GRP_PROP</code>.
     */
    public KafkaTopicByServiceRecord setGrpProp(Object value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.GRP_PROP</code>.
     */
    public Object getGrpProp() {
        return get(6);
    }

    /**
     * Setter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.PROPERTY_KEY</code>.
     */
    public KafkaTopicByServiceRecord setPropertyKey(Object value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.KAFKA_TOPIC_BY_SERVICE.PROPERTY_KEY</code>.
     */
    public Object getPropertyKey() {
        return get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Object, Object, Object, Object, String, Object, Object, Object> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Object, Object, Object, Object, String, Object, Object, Object> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.SERVICE_ID;
    }

    @Override
    public Field<Object> field2() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.PROFILE_ID;
    }

    @Override
    public Field<Object> field3() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.TOPIC_ID;
    }

    @Override
    public Field<Object> field4() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.STAND;
    }

    @Override
    public Field<String> field5() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.DERRECTION;
    }

    @Override
    public Field<Object> field6() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.TOPIC_NAME;
    }

    @Override
    public Field<Object> field7() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.GRP_PROP;
    }

    @Override
    public Field<Object> field8() {
        return KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE.PROPERTY_KEY;
    }

    @Override
    public Object component1() {
        return getServiceId();
    }

    @Override
    public Object component2() {
        return getProfileId();
    }

    @Override
    public Object component3() {
        return getTopicId();
    }

    @Override
    public Object component4() {
        return getStand();
    }

    @Override
    public String component5() {
        return getDerrection();
    }

    @Override
    public Object component6() {
        return getTopicName();
    }

    @Override
    public Object component7() {
        return getGrpProp();
    }

    @Override
    public Object component8() {
        return getPropertyKey();
    }

    @Override
    public Object value1() {
        return getServiceId();
    }

    @Override
    public Object value2() {
        return getProfileId();
    }

    @Override
    public Object value3() {
        return getTopicId();
    }

    @Override
    public Object value4() {
        return getStand();
    }

    @Override
    public String value5() {
        return getDerrection();
    }

    @Override
    public Object value6() {
        return getTopicName();
    }

    @Override
    public Object value7() {
        return getGrpProp();
    }

    @Override
    public Object value8() {
        return getPropertyKey();
    }

    @Override
    public KafkaTopicByServiceRecord value1(Object value) {
        setServiceId(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value2(Object value) {
        setProfileId(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value3(Object value) {
        setTopicId(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value4(Object value) {
        setStand(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value5(String value) {
        setDerrection(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value6(Object value) {
        setTopicName(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value7(Object value) {
        setGrpProp(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord value8(Object value) {
        setPropertyKey(value);
        return this;
    }

    @Override
    public KafkaTopicByServiceRecord values(Object value1, Object value2, Object value3, Object value4, String value5, Object value6, Object value7, Object value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KafkaTopicByServiceRecord
     */
    public KafkaTopicByServiceRecord() {
        super(KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE);
    }

    /**
     * Create a detached, initialised KafkaTopicByServiceRecord
     */
    public KafkaTopicByServiceRecord(Object serviceId, Object profileId, Object topicId, Object stand, String derrection, Object topicName, Object grpProp, Object propertyKey) {
        super(KafkaTopicByService.KAFKA_TOPIC_BY_SERVICE);

        setServiceId(serviceId);
        setProfileId(profileId);
        setTopicId(topicId);
        setStand(stand);
        setDerrection(derrection);
        setTopicName(topicName);
        setGrpProp(grpProp);
        setPropertyKey(propertyKey);
    }
}
