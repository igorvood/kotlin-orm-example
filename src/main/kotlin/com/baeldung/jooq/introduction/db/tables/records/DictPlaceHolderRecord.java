/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.DictPlaceHolder;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictPlaceHolderRecord extends UpdatableRecordImpl<DictPlaceHolderRecord> implements Record3<Object, Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.DICT_PLACE_HOLDER.ID</code>.
     */
    public DictPlaceHolderRecord setId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_PLACE_HOLDER.ID</code>.
     */
    public Object getId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_PLACE_HOLDER.DESCRIPTION</code>.
     */
    public DictPlaceHolderRecord setDescription(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_PLACE_HOLDER.DESCRIPTION</code>.
     */
    public Object getDescription() {
        return get(1);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_PLACE_HOLDER.DEFAULT_VALUE</code>.
     */
    public DictPlaceHolderRecord setDefaultValue(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_PLACE_HOLDER.DEFAULT_VALUE</code>.
     */
    public Object getDefaultValue() {
        return get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Object> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Object, Object, Object> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Object, Object, Object> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return DictPlaceHolder.DICT_PLACE_HOLDER.ID;
    }

    @Override
    public Field<Object> field2() {
        return DictPlaceHolder.DICT_PLACE_HOLDER.DESCRIPTION;
    }

    @Override
    public Field<Object> field3() {
        return DictPlaceHolder.DICT_PLACE_HOLDER.DEFAULT_VALUE;
    }

    @Override
    public Object component1() {
        return getId();
    }

    @Override
    public Object component2() {
        return getDescription();
    }

    @Override
    public Object component3() {
        return getDefaultValue();
    }

    @Override
    public Object value1() {
        return getId();
    }

    @Override
    public Object value2() {
        return getDescription();
    }

    @Override
    public Object value3() {
        return getDefaultValue();
    }

    @Override
    public DictPlaceHolderRecord value1(Object value) {
        setId(value);
        return this;
    }

    @Override
    public DictPlaceHolderRecord value2(Object value) {
        setDescription(value);
        return this;
    }

    @Override
    public DictPlaceHolderRecord value3(Object value) {
        setDefaultValue(value);
        return this;
    }

    @Override
    public DictPlaceHolderRecord values(Object value1, Object value2, Object value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DictPlaceHolderRecord
     */
    public DictPlaceHolderRecord() {
        super(DictPlaceHolder.DICT_PLACE_HOLDER);
    }

    /**
     * Create a detached, initialised DictPlaceHolderRecord
     */
    public DictPlaceHolderRecord(Object id, Object description, Object defaultValue) {
        super(DictPlaceHolder.DICT_PLACE_HOLDER);

        setId(id);
        setDescription(description);
        setDefaultValue(defaultValue);
    }
}
