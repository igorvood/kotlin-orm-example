/*
 * This file is generated by jOOQ.
 */
package com.baeldung.jooq.introduction.db.tables.records;


import com.baeldung.jooq.introduction.db.tables.DictKafkaPropValue;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictKafkaPropValueRecord extends UpdatableRecordImpl<DictKafkaPropValueRecord> implements Record4<Object, Object, Object, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.GRP_ID</code>.
     */
    public DictKafkaPropValueRecord setGrpId(Object value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.GRP_ID</code>.
     */
    public Object getGrpId() {
        return get(0);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.TYPE_PROP</code>.
     */
    public DictKafkaPropValueRecord setTypeProp(Object value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.TYPE_PROP</code>.
     */
    public Object getTypeProp() {
        return get(1);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.PROP_ID</code>.
     */
    public DictKafkaPropValueRecord setPropId(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.PROP_ID</code>.
     */
    public Object getPropId() {
        return get(2);
    }

    /**
     * Setter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.PROP_VALUE</code>.
     */
    public DictKafkaPropValueRecord setPropValue(Object value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOCALDEV.DICT_KAFKA_PROP_VALUE.PROP_VALUE</code>.
     */
    public Object getPropValue() {
        return get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Object, Object, Object> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Object, Object, Object, Object> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Object, Object, Object, Object> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Object> field1() {
        return DictKafkaPropValue.DICT_KAFKA_PROP_VALUE.GRP_ID;
    }

    @Override
    public Field<Object> field2() {
        return DictKafkaPropValue.DICT_KAFKA_PROP_VALUE.TYPE_PROP;
    }

    @Override
    public Field<Object> field3() {
        return DictKafkaPropValue.DICT_KAFKA_PROP_VALUE.PROP_ID;
    }

    @Override
    public Field<Object> field4() {
        return DictKafkaPropValue.DICT_KAFKA_PROP_VALUE.PROP_VALUE;
    }

    @Override
    public Object component1() {
        return getGrpId();
    }

    @Override
    public Object component2() {
        return getTypeProp();
    }

    @Override
    public Object component3() {
        return getPropId();
    }

    @Override
    public Object component4() {
        return getPropValue();
    }

    @Override
    public Object value1() {
        return getGrpId();
    }

    @Override
    public Object value2() {
        return getTypeProp();
    }

    @Override
    public Object value3() {
        return getPropId();
    }

    @Override
    public Object value4() {
        return getPropValue();
    }

    @Override
    public DictKafkaPropValueRecord value1(Object value) {
        setGrpId(value);
        return this;
    }

    @Override
    public DictKafkaPropValueRecord value2(Object value) {
        setTypeProp(value);
        return this;
    }

    @Override
    public DictKafkaPropValueRecord value3(Object value) {
        setPropId(value);
        return this;
    }

    @Override
    public DictKafkaPropValueRecord value4(Object value) {
        setPropValue(value);
        return this;
    }

    @Override
    public DictKafkaPropValueRecord values(Object value1, Object value2, Object value3, Object value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DictKafkaPropValueRecord
     */
    public DictKafkaPropValueRecord() {
        super(DictKafkaPropValue.DICT_KAFKA_PROP_VALUE);
    }

    /**
     * Create a detached, initialised DictKafkaPropValueRecord
     */
    public DictKafkaPropValueRecord(Object grpId, Object typeProp, Object propId, Object propValue) {
        super(DictKafkaPropValue.DICT_KAFKA_PROP_VALUE);

        setGrpId(grpId);
        setTypeProp(typeProp);
        setPropId(propId);
        setPropValue(propValue);
    }
}
